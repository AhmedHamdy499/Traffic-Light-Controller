;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/13/2025 9:22:05 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29CA      	GOTO       458
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00D6      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00D7      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Traffic Light Controller.c,83 :: 		void interrupt(){
;Traffic Light Controller.c,84 :: 		if(INTF_Bit == 1){
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x2824      	GOTO       L_interrupt16
;Traffic Light Controller.c,85 :: 		INTF_Bit = 0; //Reset Flag
0x000D	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;Traffic Light Controller.c,86 :: 		while (controlPin == 1){ //Still in manual mode
L_interrupt17:
0x000E	0x1C06      	BTFSS      PORTB, 0
0x000F	0x2824      	GOTO       L_interrupt18
;Traffic Light Controller.c,88 :: 		if (street == 0){ //West Street
0x0010	0x1B86      	BTFSC      PORTB, 7
0x0011	0x2819      	GOTO       L_interrupt19
;Traffic Light Controller.c,89 :: 		westRed = 0; westYellow = 0; westGreen = 1;
0x0012	0x1086      	BCF        PORTB, 1
0x0013	0x1106      	BCF        PORTB, 2
0x0014	0x1586      	BSF        PORTB, 3
;Traffic Light Controller.c,90 :: 		southRed = 1; southYellow = 0; southGreen = 0;
0x0015	0x1606      	BSF        PORTB, 4
0x0016	0x1286      	BCF        PORTB, 5
0x0017	0x1306      	BCF        PORTB, 6
;Traffic Light Controller.c,91 :: 		}
0x0018	0x2821      	GOTO       L_interrupt20
L_interrupt19:
;Traffic Light Controller.c,92 :: 		else if (street == 1){ //South Street
0x0019	0x1F86      	BTFSS      PORTB, 7
0x001A	0x2821      	GOTO       L_interrupt21
;Traffic Light Controller.c,93 :: 		westRed = 1; westYellow = 0; westGreen = 0;
0x001B	0x1486      	BSF        PORTB, 1
0x001C	0x1106      	BCF        PORTB, 2
0x001D	0x1186      	BCF        PORTB, 3
;Traffic Light Controller.c,94 :: 		southRed = 0; southYellow = 0; southGreen = 1;
0x001E	0x1206      	BCF        PORTB, 4
0x001F	0x1286      	BCF        PORTB, 5
0x0020	0x1706      	BSF        PORTB, 6
;Traffic Light Controller.c,95 :: 		}
L_interrupt21:
L_interrupt20:
;Traffic Light Controller.c,96 :: 		westDisplay = 0;
0x0021	0x0187      	CLRF       PORTC
;Traffic Light Controller.c,97 :: 		southDisplay = 0;
0x0022	0x0188      	CLRF       PORTD
;Traffic Light Controller.c,98 :: 		}
0x0023	0x280E      	GOTO       L_interrupt17
L_interrupt18:
;Traffic Light Controller.c,99 :: 		}
L_interrupt16:
;Traffic Light Controller.c,100 :: 		}
L_end_interrupt:
L__interrupt48:
0x0024	0x0857      	MOVF       ___savePCLATH, 0
0x0025	0x008A      	MOVWF      PCLATH
0x0026	0x0E56      	SWAPF      ___saveSTATUS, 0
0x0027	0x0083      	MOVWF      STATUS
0x0028	0x0EFF      	SWAPF      R15, 1
0x0029	0x0E7F      	SWAPF      R15, 0
0x002A	0x0009      	RETFIE
; end of _interrupt
_setWest:
;Traffic Light Controller.c,30 :: 		void setWest(int Red,int Yellow,int Green){
;Traffic Light Controller.c,31 :: 		westRed = Red;
0x002B	0x1283      	BCF        STATUS, 5
0x002C	0x1303      	BCF        STATUS, 6
0x002D	0x1858      	BTFSC      FARG_setWest_Red, 0
0x002E	0x2831      	GOTO       L__setWest26
0x002F	0x1086      	BCF        PORTB, 1
0x0030	0x2832      	GOTO       L__setWest27
L__setWest26:
0x0031	0x1486      	BSF        PORTB, 1
L__setWest27:
;Traffic Light Controller.c,32 :: 		westYellow = Yellow;
0x0032	0x185A      	BTFSC      FARG_setWest_Yellow, 0
0x0033	0x2836      	GOTO       L__setWest28
0x0034	0x1106      	BCF        PORTB, 2
0x0035	0x2837      	GOTO       L__setWest29
L__setWest28:
0x0036	0x1506      	BSF        PORTB, 2
L__setWest29:
;Traffic Light Controller.c,33 :: 		westGreen = Green;
0x0037	0x185C      	BTFSC      FARG_setWest_Green, 0
0x0038	0x283B      	GOTO       L__setWest30
0x0039	0x1186      	BCF        PORTB, 3
0x003A	0x283C      	GOTO       L__setWest31
L__setWest30:
0x003B	0x1586      	BSF        PORTB, 3
L__setWest31:
;Traffic Light Controller.c,34 :: 		}
L_end_setWest:
0x003C	0x0008      	RETURN
; end of _setWest
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x1303      	BCF        STATUS, 6
0x003F	0x0855      	MOVF       ___DoICPAddr+1, 0
0x0040	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0041	0x0854      	MOVF       ___DoICPAddr, 0
0x0042	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0043	0x0008      	RETURN
; end of _____DoICP
_setSouth:
;Traffic Light Controller.c,36 :: 		void setSouth(int Red,int Yellow,int Green){
;Traffic Light Controller.c,37 :: 		southRed = Red;
0x0044	0x1283      	BCF        STATUS, 5
0x0045	0x1303      	BCF        STATUS, 6
0x0046	0x1858      	BTFSC      FARG_setSouth_Red, 0
0x0047	0x284A      	GOTO       L__setSouth33
0x0048	0x1206      	BCF        PORTB, 4
0x0049	0x284B      	GOTO       L__setSouth34
L__setSouth33:
0x004A	0x1606      	BSF        PORTB, 4
L__setSouth34:
;Traffic Light Controller.c,38 :: 		southYellow = Yellow;
0x004B	0x185A      	BTFSC      FARG_setSouth_Yellow, 0
0x004C	0x284F      	GOTO       L__setSouth35
0x004D	0x1286      	BCF        PORTB, 5
0x004E	0x2850      	GOTO       L__setSouth36
L__setSouth35:
0x004F	0x1686      	BSF        PORTB, 5
L__setSouth36:
;Traffic Light Controller.c,39 :: 		southGreen = Green;
0x0050	0x185C      	BTFSC      FARG_setSouth_Green, 0
0x0051	0x2854      	GOTO       L__setSouth37
0x0052	0x1306      	BCF        PORTB, 6
0x0053	0x2855      	GOTO       L__setSouth38
L__setSouth37:
0x0054	0x1706      	BSF        PORTB, 6
L__setSouth38:
;Traffic Light Controller.c,40 :: 		}
L_end_setSouth:
0x0055	0x0008      	RETURN
; end of _setSouth
_firstPhase:
;Traffic Light Controller.c,42 :: 		void firstPhase(){    //West is Green and South is Red for 20s
;Traffic Light Controller.c,43 :: 		setWest(0,0,1);
0x0056	0x1283      	BCF        STATUS, 5
0x0057	0x1303      	BCF        STATUS, 6
0x0058	0x01D8      	CLRF       FARG_setWest_Red
0x0059	0x01D9      	CLRF       FARG_setWest_Red+1
0x005A	0x01DA      	CLRF       FARG_setWest_Yellow
0x005B	0x01DB      	CLRF       FARG_setWest_Yellow+1
0x005C	0x3001      	MOVLW      1
0x005D	0x00DC      	MOVWF      FARG_setWest_Green
0x005E	0x3000      	MOVLW      0
0x005F	0x00DD      	MOVWF      FARG_setWest_Green+1
0x0060	0x202B      	CALL       _setWest
;Traffic Light Controller.c,44 :: 		setSouth(1,0,0);
0x0061	0x3001      	MOVLW      1
0x0062	0x00D8      	MOVWF      FARG_setSouth_Red
0x0063	0x3000      	MOVLW      0
0x0064	0x00D9      	MOVWF      FARG_setSouth_Red+1
0x0065	0x01DA      	CLRF       FARG_setSouth_Yellow
0x0066	0x01DB      	CLRF       FARG_setSouth_Yellow+1
0x0067	0x01DC      	CLRF       FARG_setSouth_Green
0x0068	0x01DD      	CLRF       FARG_setSouth_Green+1
0x0069	0x2044      	CALL       _setSouth
;Traffic Light Controller.c,45 :: 		for (westCounter = 20, southCounter = 23 ; westCounter > 0 ; westCounter--, southCounter--) {
0x006A	0x3014      	MOVLW      20
0x006B	0x00A0      	MOVWF      _westCounter
0x006C	0x3000      	MOVLW      0
0x006D	0x00A1      	MOVWF      _westCounter+1
0x006E	0x3017      	MOVLW      23
0x006F	0x00A2      	MOVWF      _southCounter
0x0070	0x3000      	MOVLW      0
0x0071	0x00A3      	MOVWF      _southCounter+1
L_firstPhase0:
0x0072	0x3080      	MOVLW      128
0x0073	0x00F0      	MOVWF      R0
0x0074	0x3080      	MOVLW      128
0x0075	0x0621      	XORWF      _westCounter+1, 0
0x0076	0x0270      	SUBWF      R0, 0
0x0077	0x1D03      	BTFSS      STATUS, 2
0x0078	0x287B      	GOTO       L__firstPhase40
0x0079	0x0820      	MOVF       _westCounter, 0
0x007A	0x3C00      	SUBLW      0
L__firstPhase40:
0x007B	0x1803      	BTFSC      STATUS, 0
0x007C	0x28AC      	GOTO       L_firstPhase1
;Traffic Light Controller.c,46 :: 		westDisplay = countDown[westCounter];
0x007D	0x0820      	MOVF       _westCounter, 0
0x007E	0x00F0      	MOVWF      R0
0x007F	0x0821      	MOVF       _westCounter+1, 0
0x0080	0x00F1      	MOVWF      R0+1
0x0081	0x0DF0      	RLF        R0, 1
0x0082	0x0DF1      	RLF        R0+1, 1
0x0083	0x1070      	BCF        R0, 0
0x0084	0x0870      	MOVF       R0, 0
0x0085	0x3E24      	ADDLW      _countDown
0x0086	0x0084      	MOVWF      FSR
0x0087	0x0800      	MOVF       INDF, 0
0x0088	0x0087      	MOVWF      PORTC
;Traffic Light Controller.c,47 :: 		southDisplay = countDown[southCounter];
0x0089	0x0822      	MOVF       _southCounter, 0
0x008A	0x00F0      	MOVWF      R0
0x008B	0x0823      	MOVF       _southCounter+1, 0
0x008C	0x00F1      	MOVWF      R0+1
0x008D	0x0DF0      	RLF        R0, 1
0x008E	0x0DF1      	RLF        R0+1, 1
0x008F	0x1070      	BCF        R0, 0
0x0090	0x0870      	MOVF       R0, 0
0x0091	0x3E24      	ADDLW      _countDown
0x0092	0x0084      	MOVWF      FSR
0x0093	0x0800      	MOVF       INDF, 0
0x0094	0x0088      	MOVWF      PORTD
;Traffic Light Controller.c,48 :: 		delay_ms(SEC);
0x0095	0x300B      	MOVLW      11
0x0096	0x00FB      	MOVWF      R11
0x0097	0x3026      	MOVLW      38
0x0098	0x00FC      	MOVWF      R12
0x0099	0x305D      	MOVLW      93
0x009A	0x00FD      	MOVWF      R13
L_firstPhase3:
0x009B	0x0BFD      	DECFSZ     R13, 1
0x009C	0x289B      	GOTO       L_firstPhase3
0x009D	0x0BFC      	DECFSZ     R12, 1
0x009E	0x289B      	GOTO       L_firstPhase3
0x009F	0x0BFB      	DECFSZ     R11, 1
0x00A0	0x289B      	GOTO       L_firstPhase3
0x00A1	0x0000      	NOP
0x00A2	0x0000      	NOP
;Traffic Light Controller.c,45 :: 		for (westCounter = 20, southCounter = 23 ; westCounter > 0 ; westCounter--, southCounter--) {
0x00A3	0x3001      	MOVLW      1
0x00A4	0x02A0      	SUBWF      _westCounter, 1
0x00A5	0x1C03      	BTFSS      STATUS, 0
0x00A6	0x03A1      	DECF       _westCounter+1, 1
0x00A7	0x3001      	MOVLW      1
0x00A8	0x02A2      	SUBWF      _southCounter, 1
0x00A9	0x1C03      	BTFSS      STATUS, 0
0x00AA	0x03A3      	DECF       _southCounter+1, 1
;Traffic Light Controller.c,49 :: 		}
0x00AB	0x2872      	GOTO       L_firstPhase0
L_firstPhase1:
;Traffic Light Controller.c,50 :: 		}
L_end_firstPhase:
0x00AC	0x0008      	RETURN
; end of _firstPhase
_secondPhase:
;Traffic Light Controller.c,52 :: 		void secondPhase(){   //West is Yellow and South is Red for 3s
;Traffic Light Controller.c,53 :: 		setWest(0,1,0);
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x1303      	BCF        STATUS, 6
0x00AF	0x01D8      	CLRF       FARG_setWest_Red
0x00B0	0x01D9      	CLRF       FARG_setWest_Red+1
0x00B1	0x3001      	MOVLW      1
0x00B2	0x00DA      	MOVWF      FARG_setWest_Yellow
0x00B3	0x3000      	MOVLW      0
0x00B4	0x00DB      	MOVWF      FARG_setWest_Yellow+1
0x00B5	0x01DC      	CLRF       FARG_setWest_Green
0x00B6	0x01DD      	CLRF       FARG_setWest_Green+1
0x00B7	0x202B      	CALL       _setWest
;Traffic Light Controller.c,54 :: 		setSouth(1,0,0);
0x00B8	0x3001      	MOVLW      1
0x00B9	0x00D8      	MOVWF      FARG_setSouth_Red
0x00BA	0x3000      	MOVLW      0
0x00BB	0x00D9      	MOVWF      FARG_setSouth_Red+1
0x00BC	0x01DA      	CLRF       FARG_setSouth_Yellow
0x00BD	0x01DB      	CLRF       FARG_setSouth_Yellow+1
0x00BE	0x01DC      	CLRF       FARG_setSouth_Green
0x00BF	0x01DD      	CLRF       FARG_setSouth_Green+1
0x00C0	0x2044      	CALL       _setSouth
;Traffic Light Controller.c,55 :: 		for (westCounter = 3, southCounter = 3 ; westCounter > 0 ; westCounter--, southCounter-- ) {
0x00C1	0x3003      	MOVLW      3
0x00C2	0x00A0      	MOVWF      _westCounter
0x00C3	0x3000      	MOVLW      0
0x00C4	0x00A1      	MOVWF      _westCounter+1
0x00C5	0x3003      	MOVLW      3
0x00C6	0x00A2      	MOVWF      _southCounter
0x00C7	0x3000      	MOVLW      0
0x00C8	0x00A3      	MOVWF      _southCounter+1
L_secondPhase4:
0x00C9	0x3080      	MOVLW      128
0x00CA	0x00F0      	MOVWF      R0
0x00CB	0x3080      	MOVLW      128
0x00CC	0x0621      	XORWF      _westCounter+1, 0
0x00CD	0x0270      	SUBWF      R0, 0
0x00CE	0x1D03      	BTFSS      STATUS, 2
0x00CF	0x28D2      	GOTO       L__secondPhase42
0x00D0	0x0820      	MOVF       _westCounter, 0
0x00D1	0x3C00      	SUBLW      0
L__secondPhase42:
0x00D2	0x1803      	BTFSC      STATUS, 0
0x00D3	0x2903      	GOTO       L_secondPhase5
;Traffic Light Controller.c,56 :: 		westDisplay = countDown[westCounter];
0x00D4	0x0820      	MOVF       _westCounter, 0
0x00D5	0x00F0      	MOVWF      R0
0x00D6	0x0821      	MOVF       _westCounter+1, 0
0x00D7	0x00F1      	MOVWF      R0+1
0x00D8	0x0DF0      	RLF        R0, 1
0x00D9	0x0DF1      	RLF        R0+1, 1
0x00DA	0x1070      	BCF        R0, 0
0x00DB	0x0870      	MOVF       R0, 0
0x00DC	0x3E24      	ADDLW      _countDown
0x00DD	0x0084      	MOVWF      FSR
0x00DE	0x0800      	MOVF       INDF, 0
0x00DF	0x0087      	MOVWF      PORTC
;Traffic Light Controller.c,57 :: 		southDisplay = countDown[southCounter];
0x00E0	0x0822      	MOVF       _southCounter, 0
0x00E1	0x00F0      	MOVWF      R0
0x00E2	0x0823      	MOVF       _southCounter+1, 0
0x00E3	0x00F1      	MOVWF      R0+1
0x00E4	0x0DF0      	RLF        R0, 1
0x00E5	0x0DF1      	RLF        R0+1, 1
0x00E6	0x1070      	BCF        R0, 0
0x00E7	0x0870      	MOVF       R0, 0
0x00E8	0x3E24      	ADDLW      _countDown
0x00E9	0x0084      	MOVWF      FSR
0x00EA	0x0800      	MOVF       INDF, 0
0x00EB	0x0088      	MOVWF      PORTD
;Traffic Light Controller.c,58 :: 		delay_ms(SEC);
0x00EC	0x300B      	MOVLW      11
0x00ED	0x00FB      	MOVWF      R11
0x00EE	0x3026      	MOVLW      38
0x00EF	0x00FC      	MOVWF      R12
0x00F0	0x305D      	MOVLW      93
0x00F1	0x00FD      	MOVWF      R13
L_secondPhase7:
0x00F2	0x0BFD      	DECFSZ     R13, 1
0x00F3	0x28F2      	GOTO       L_secondPhase7
0x00F4	0x0BFC      	DECFSZ     R12, 1
0x00F5	0x28F2      	GOTO       L_secondPhase7
0x00F6	0x0BFB      	DECFSZ     R11, 1
0x00F7	0x28F2      	GOTO       L_secondPhase7
0x00F8	0x0000      	NOP
0x00F9	0x0000      	NOP
;Traffic Light Controller.c,55 :: 		for (westCounter = 3, southCounter = 3 ; westCounter > 0 ; westCounter--, southCounter-- ) {
0x00FA	0x3001      	MOVLW      1
0x00FB	0x02A0      	SUBWF      _westCounter, 1
0x00FC	0x1C03      	BTFSS      STATUS, 0
0x00FD	0x03A1      	DECF       _westCounter+1, 1
0x00FE	0x3001      	MOVLW      1
0x00FF	0x02A2      	SUBWF      _southCounter, 1
0x0100	0x1C03      	BTFSS      STATUS, 0
0x0101	0x03A3      	DECF       _southCounter+1, 1
;Traffic Light Controller.c,59 :: 		}
0x0102	0x28C9      	GOTO       L_secondPhase4
L_secondPhase5:
;Traffic Light Controller.c,60 :: 		}
L_end_secondPhase:
0x0103	0x0008      	RETURN
; end of _secondPhase
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0104	0x203D      	CALL       _____DoICP
0x0105	0x118A      	BCF        PCLATH, 3
0x0106	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0107	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0108	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0109	0x0AD4      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x010A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x010B	0x0AD5      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x010C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x010D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x010E	0x2904      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x010F	0x0008      	RETURN
; end of ___CC2DW
_thirdPhase:
;Traffic Light Controller.c,62 :: 		void thirdPhase(){    //West is Red and South is Green for 12s
;Traffic Light Controller.c,63 :: 		setWest(1,0,0);
0x0110	0x3001      	MOVLW      1
0x0111	0x1283      	BCF        STATUS, 5
0x0112	0x1303      	BCF        STATUS, 6
0x0113	0x00D8      	MOVWF      FARG_setWest_Red
0x0114	0x3000      	MOVLW      0
0x0115	0x00D9      	MOVWF      FARG_setWest_Red+1
0x0116	0x01DA      	CLRF       FARG_setWest_Yellow
0x0117	0x01DB      	CLRF       FARG_setWest_Yellow+1
0x0118	0x01DC      	CLRF       FARG_setWest_Green
0x0119	0x01DD      	CLRF       FARG_setWest_Green+1
0x011A	0x202B      	CALL       _setWest
;Traffic Light Controller.c,64 :: 		setSouth(0,0,1);
0x011B	0x01D8      	CLRF       FARG_setSouth_Red
0x011C	0x01D9      	CLRF       FARG_setSouth_Red+1
0x011D	0x01DA      	CLRF       FARG_setSouth_Yellow
0x011E	0x01DB      	CLRF       FARG_setSouth_Yellow+1
0x011F	0x3001      	MOVLW      1
0x0120	0x00DC      	MOVWF      FARG_setSouth_Green
0x0121	0x3000      	MOVLW      0
0x0122	0x00DD      	MOVWF      FARG_setSouth_Green+1
0x0123	0x2044      	CALL       _setSouth
;Traffic Light Controller.c,65 :: 		for (westCounter = 15 ,southCounter = 12 ; southCounter > 0 ; westCounter--,southCounter--) {
0x0124	0x300F      	MOVLW      15
0x0125	0x00A0      	MOVWF      _westCounter
0x0126	0x3000      	MOVLW      0
0x0127	0x00A1      	MOVWF      _westCounter+1
0x0128	0x300C      	MOVLW      12
0x0129	0x00A2      	MOVWF      _southCounter
0x012A	0x3000      	MOVLW      0
0x012B	0x00A3      	MOVWF      _southCounter+1
L_thirdPhase8:
0x012C	0x3080      	MOVLW      128
0x012D	0x00F0      	MOVWF      R0
0x012E	0x3080      	MOVLW      128
0x012F	0x0623      	XORWF      _southCounter+1, 0
0x0130	0x0270      	SUBWF      R0, 0
0x0131	0x1D03      	BTFSS      STATUS, 2
0x0132	0x2935      	GOTO       L__thirdPhase44
0x0133	0x0822      	MOVF       _southCounter, 0
0x0134	0x3C00      	SUBLW      0
L__thirdPhase44:
0x0135	0x1803      	BTFSC      STATUS, 0
0x0136	0x2966      	GOTO       L_thirdPhase9
;Traffic Light Controller.c,66 :: 		westDisplay = countDown[westCounter];
0x0137	0x0820      	MOVF       _westCounter, 0
0x0138	0x00F0      	MOVWF      R0
0x0139	0x0821      	MOVF       _westCounter+1, 0
0x013A	0x00F1      	MOVWF      R0+1
0x013B	0x0DF0      	RLF        R0, 1
0x013C	0x0DF1      	RLF        R0+1, 1
0x013D	0x1070      	BCF        R0, 0
0x013E	0x0870      	MOVF       R0, 0
0x013F	0x3E24      	ADDLW      _countDown
0x0140	0x0084      	MOVWF      FSR
0x0141	0x0800      	MOVF       INDF, 0
0x0142	0x0087      	MOVWF      PORTC
;Traffic Light Controller.c,67 :: 		southDisplay = countDown[southCounter];
0x0143	0x0822      	MOVF       _southCounter, 0
0x0144	0x00F0      	MOVWF      R0
0x0145	0x0823      	MOVF       _southCounter+1, 0
0x0146	0x00F1      	MOVWF      R0+1
0x0147	0x0DF0      	RLF        R0, 1
0x0148	0x0DF1      	RLF        R0+1, 1
0x0149	0x1070      	BCF        R0, 0
0x014A	0x0870      	MOVF       R0, 0
0x014B	0x3E24      	ADDLW      _countDown
0x014C	0x0084      	MOVWF      FSR
0x014D	0x0800      	MOVF       INDF, 0
0x014E	0x0088      	MOVWF      PORTD
;Traffic Light Controller.c,68 :: 		delay_ms(SEC);
0x014F	0x300B      	MOVLW      11
0x0150	0x00FB      	MOVWF      R11
0x0151	0x3026      	MOVLW      38
0x0152	0x00FC      	MOVWF      R12
0x0153	0x305D      	MOVLW      93
0x0154	0x00FD      	MOVWF      R13
L_thirdPhase11:
0x0155	0x0BFD      	DECFSZ     R13, 1
0x0156	0x2955      	GOTO       L_thirdPhase11
0x0157	0x0BFC      	DECFSZ     R12, 1
0x0158	0x2955      	GOTO       L_thirdPhase11
0x0159	0x0BFB      	DECFSZ     R11, 1
0x015A	0x2955      	GOTO       L_thirdPhase11
0x015B	0x0000      	NOP
0x015C	0x0000      	NOP
;Traffic Light Controller.c,65 :: 		for (westCounter = 15 ,southCounter = 12 ; southCounter > 0 ; westCounter--,southCounter--) {
0x015D	0x3001      	MOVLW      1
0x015E	0x02A0      	SUBWF      _westCounter, 1
0x015F	0x1C03      	BTFSS      STATUS, 0
0x0160	0x03A1      	DECF       _westCounter+1, 1
0x0161	0x3001      	MOVLW      1
0x0162	0x02A2      	SUBWF      _southCounter, 1
0x0163	0x1C03      	BTFSS      STATUS, 0
0x0164	0x03A3      	DECF       _southCounter+1, 1
;Traffic Light Controller.c,69 :: 		}
0x0165	0x292C      	GOTO       L_thirdPhase8
L_thirdPhase9:
;Traffic Light Controller.c,71 :: 		}
L_end_thirdPhase:
0x0166	0x0008      	RETURN
; end of _thirdPhase
_fourthPhase:
;Traffic Light Controller.c,73 :: 		void fourthPhase(){   //West is Red and South is Yellow for 3s
;Traffic Light Controller.c,74 :: 		setWest(1,0,0);
0x0167	0x3001      	MOVLW      1
0x0168	0x1283      	BCF        STATUS, 5
0x0169	0x1303      	BCF        STATUS, 6
0x016A	0x00D8      	MOVWF      FARG_setWest_Red
0x016B	0x3000      	MOVLW      0
0x016C	0x00D9      	MOVWF      FARG_setWest_Red+1
0x016D	0x01DA      	CLRF       FARG_setWest_Yellow
0x016E	0x01DB      	CLRF       FARG_setWest_Yellow+1
0x016F	0x01DC      	CLRF       FARG_setWest_Green
0x0170	0x01DD      	CLRF       FARG_setWest_Green+1
0x0171	0x202B      	CALL       _setWest
;Traffic Light Controller.c,75 :: 		setSouth(0,1,0);
0x0172	0x01D8      	CLRF       FARG_setSouth_Red
0x0173	0x01D9      	CLRF       FARG_setSouth_Red+1
0x0174	0x3001      	MOVLW      1
0x0175	0x00DA      	MOVWF      FARG_setSouth_Yellow
0x0176	0x3000      	MOVLW      0
0x0177	0x00DB      	MOVWF      FARG_setSouth_Yellow+1
0x0178	0x01DC      	CLRF       FARG_setSouth_Green
0x0179	0x01DD      	CLRF       FARG_setSouth_Green+1
0x017A	0x2044      	CALL       _setSouth
;Traffic Light Controller.c,76 :: 		for (westCounter = 3, southCounter = 3 ; southCounter > 0 ; westCounter--, southCounter--) {
0x017B	0x3003      	MOVLW      3
0x017C	0x00A0      	MOVWF      _westCounter
0x017D	0x3000      	MOVLW      0
0x017E	0x00A1      	MOVWF      _westCounter+1
0x017F	0x3003      	MOVLW      3
0x0180	0x00A2      	MOVWF      _southCounter
0x0181	0x3000      	MOVLW      0
0x0182	0x00A3      	MOVWF      _southCounter+1
L_fourthPhase12:
0x0183	0x3080      	MOVLW      128
0x0184	0x00F0      	MOVWF      R0
0x0185	0x3080      	MOVLW      128
0x0186	0x0623      	XORWF      _southCounter+1, 0
0x0187	0x0270      	SUBWF      R0, 0
0x0188	0x1D03      	BTFSS      STATUS, 2
0x0189	0x298C      	GOTO       L__fourthPhase46
0x018A	0x0822      	MOVF       _southCounter, 0
0x018B	0x3C00      	SUBLW      0
L__fourthPhase46:
0x018C	0x1803      	BTFSC      STATUS, 0
0x018D	0x29BD      	GOTO       L_fourthPhase13
;Traffic Light Controller.c,77 :: 		westDisplay = countDown[westCounter];
0x018E	0x0820      	MOVF       _westCounter, 0
0x018F	0x00F0      	MOVWF      R0
0x0190	0x0821      	MOVF       _westCounter+1, 0
0x0191	0x00F1      	MOVWF      R0+1
0x0192	0x0DF0      	RLF        R0, 1
0x0193	0x0DF1      	RLF        R0+1, 1
0x0194	0x1070      	BCF        R0, 0
0x0195	0x0870      	MOVF       R0, 0
0x0196	0x3E24      	ADDLW      _countDown
0x0197	0x0084      	MOVWF      FSR
0x0198	0x0800      	MOVF       INDF, 0
0x0199	0x0087      	MOVWF      PORTC
;Traffic Light Controller.c,78 :: 		southDisplay = countDown[southCounter];
0x019A	0x0822      	MOVF       _southCounter, 0
0x019B	0x00F0      	MOVWF      R0
0x019C	0x0823      	MOVF       _southCounter+1, 0
0x019D	0x00F1      	MOVWF      R0+1
0x019E	0x0DF0      	RLF        R0, 1
0x019F	0x0DF1      	RLF        R0+1, 1
0x01A0	0x1070      	BCF        R0, 0
0x01A1	0x0870      	MOVF       R0, 0
0x01A2	0x3E24      	ADDLW      _countDown
0x01A3	0x0084      	MOVWF      FSR
0x01A4	0x0800      	MOVF       INDF, 0
0x01A5	0x0088      	MOVWF      PORTD
;Traffic Light Controller.c,79 :: 		delay_ms(SEC);
0x01A6	0x300B      	MOVLW      11
0x01A7	0x00FB      	MOVWF      R11
0x01A8	0x3026      	MOVLW      38
0x01A9	0x00FC      	MOVWF      R12
0x01AA	0x305D      	MOVLW      93
0x01AB	0x00FD      	MOVWF      R13
L_fourthPhase15:
0x01AC	0x0BFD      	DECFSZ     R13, 1
0x01AD	0x29AC      	GOTO       L_fourthPhase15
0x01AE	0x0BFC      	DECFSZ     R12, 1
0x01AF	0x29AC      	GOTO       L_fourthPhase15
0x01B0	0x0BFB      	DECFSZ     R11, 1
0x01B1	0x29AC      	GOTO       L_fourthPhase15
0x01B2	0x0000      	NOP
0x01B3	0x0000      	NOP
;Traffic Light Controller.c,76 :: 		for (westCounter = 3, southCounter = 3 ; southCounter > 0 ; westCounter--, southCounter--) {
0x01B4	0x3001      	MOVLW      1
0x01B5	0x02A0      	SUBWF      _westCounter, 1
0x01B6	0x1C03      	BTFSS      STATUS, 0
0x01B7	0x03A1      	DECF       _westCounter+1, 1
0x01B8	0x3001      	MOVLW      1
0x01B9	0x02A2      	SUBWF      _southCounter, 1
0x01BA	0x1C03      	BTFSS      STATUS, 0
0x01BB	0x03A3      	DECF       _southCounter+1, 1
;Traffic Light Controller.c,80 :: 		}
0x01BC	0x2983      	GOTO       L_fourthPhase12
L_fourthPhase13:
;Traffic Light Controller.c,81 :: 		}
L_end_fourthPhase:
0x01BD	0x0008      	RETURN
; end of _fourthPhase
_initialConfig:
;Traffic Light Controller.c,21 :: 		void initialConfig(){
;Traffic Light Controller.c,22 :: 		TRISB = 0; TRISC = 0; TRISD = 0;  //Set PORT B,C,D As Output
0x01BE	0x1683      	BSF        STATUS, 5
0x01BF	0x1303      	BCF        STATUS, 6
0x01C0	0x0186      	CLRF       TRISB
0x01C1	0x0187      	CLRF       TRISC
0x01C2	0x0188      	CLRF       TRISD
;Traffic Light Controller.c,23 :: 		ADCON1 = 7;   //Make PortA & PortE R/W Analog Signal
0x01C3	0x3007      	MOVLW      7
0x01C4	0x009F      	MOVWF      ADCON1
;Traffic Light Controller.c,24 :: 		TRISB.B0 = 1; //Make interrupt pin as input
0x01C5	0x1406      	BSF        TRISB, 0
;Traffic Light Controller.c,25 :: 		GIE_Bit = 1;  //Global interrupt enable
0x01C6	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Traffic Light Controller.c,26 :: 		INTE_Bit = 1; //B0 interrupt enable
0x01C7	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;Traffic Light Controller.c,27 :: 		INTEDG_Bit = 1; //Interrupt On Rising Edge
0x01C8	0x1701      	BSF        INTEDG_bit, BitPos(INTEDG_bit+0)
;Traffic Light Controller.c,28 :: 		}
L_end_initialConfig:
0x01C9	0x0008      	RETURN
; end of _initialConfig
_main:
0x01CA	0x220C      	CALL       524
;Traffic Light Controller.c,102 :: 		void main() {
;Traffic Light Controller.c,104 :: 		initialConfig();
0x01CB	0x21BE      	CALL       _initialConfig
;Traffic Light Controller.c,106 :: 		while(1) {
L_main22:
;Traffic Light Controller.c,108 :: 		firstPhase();
0x01CC	0x2056      	CALL       _firstPhase
;Traffic Light Controller.c,109 :: 		secondPhase();
0x01CD	0x20AD      	CALL       _secondPhase
;Traffic Light Controller.c,110 :: 		thirdPhase();
0x01CE	0x2110      	CALL       _thirdPhase
;Traffic Light Controller.c,111 :: 		fourthPhase();
0x01CF	0x2167      	CALL       _fourthPhase
;Traffic Light Controller.c,113 :: 		}
0x01D0	0x29CC      	GOTO       L_main22
;Traffic Light Controller.c,114 :: 		}
L_end_main:
0x01D1	0x29D1      	GOTO       $+0
; end of _main
0x020C	0x3020      	MOVLW      32
0x020D	0x0084      	MOVWF      FSR
0x020E	0x3034      	MOVLW      52
0x020F	0x1283      	BCF        STATUS, 5
0x0210	0x1303      	BCF        STATUS, 6
0x0211	0x00F0      	MOVWF      R0
0x0212	0x30D7      	MOVLW      215
0x0213	0x00D4      	MOVWF      ___DoICPAddr
0x0214	0x3001      	MOVLW      1
0x0215	0x00D5      	MOVWF      85
0x0216	0x2104      	CALL       260
0x0217	0x0008      	RETURN
;Traffic Light Controller.c,0 :: ?ICS_westCounter
0x01D7	0x3400 ;?ICS_westCounter+0
0x01D8	0x3400 ;?ICS_westCounter+1
; end of ?ICS_westCounter
;Traffic Light Controller.c,0 :: ?ICS_southCounter
0x01D9	0x3400 ;?ICS_southCounter+0
0x01DA	0x3400 ;?ICS_southCounter+1
; end of ?ICS_southCounter
;Traffic Light Controller.c,0 :: ?ICS_countDown
0x01DB	0x3400 ;?ICS_countDown+0
0x01DC	0x3400 ;?ICS_countDown+1
0x01DD	0x3401 ;?ICS_countDown+2
0x01DE	0x3400 ;?ICS_countDown+3
0x01DF	0x3402 ;?ICS_countDown+4
0x01E0	0x3400 ;?ICS_countDown+5
0x01E1	0x3403 ;?ICS_countDown+6
0x01E2	0x3400 ;?ICS_countDown+7
0x01E3	0x3404 ;?ICS_countDown+8
0x01E4	0x3400 ;?ICS_countDown+9
0x01E5	0x3405 ;?ICS_countDown+10
0x01E6	0x3400 ;?ICS_countDown+11
0x01E7	0x3406 ;?ICS_countDown+12
0x01E8	0x3400 ;?ICS_countDown+13
0x01E9	0x3407 ;?ICS_countDown+14
0x01EA	0x3400 ;?ICS_countDown+15
0x01EB	0x3408 ;?ICS_countDown+16
0x01EC	0x3400 ;?ICS_countDown+17
0x01ED	0x3409 ;?ICS_countDown+18
0x01EE	0x3400 ;?ICS_countDown+19
0x01EF	0x3410 ;?ICS_countDown+20
0x01F0	0x3400 ;?ICS_countDown+21
0x01F1	0x3411 ;?ICS_countDown+22
0x01F2	0x3400 ;?ICS_countDown+23
0x01F3	0x3412 ;?ICS_countDown+24
0x01F4	0x3400 ;?ICS_countDown+25
0x01F5	0x3413 ;?ICS_countDown+26
0x01F6	0x3400 ;?ICS_countDown+27
0x01F7	0x3414 ;?ICS_countDown+28
0x01F8	0x3400 ;?ICS_countDown+29
0x01F9	0x3415 ;?ICS_countDown+30
0x01FA	0x3400 ;?ICS_countDown+31
0x01FB	0x3416 ;?ICS_countDown+32
0x01FC	0x3400 ;?ICS_countDown+33
0x01FD	0x3417 ;?ICS_countDown+34
0x01FE	0x3400 ;?ICS_countDown+35
0x01FF	0x3418 ;?ICS_countDown+36
0x0200	0x3400 ;?ICS_countDown+37
0x0201	0x3419 ;?ICS_countDown+38
0x0202	0x3400 ;?ICS_countDown+39
0x0203	0x3420 ;?ICS_countDown+40
0x0204	0x3400 ;?ICS_countDown+41
0x0205	0x3421 ;?ICS_countDown+42
0x0206	0x3400 ;?ICS_countDown+43
0x0207	0x3422 ;?ICS_countDown+44
0x0208	0x3400 ;?ICS_countDown+45
0x0209	0x3423 ;?ICS_countDown+46
0x020A	0x3400 ;?ICS_countDown+47
; end of ?ICS_countDown
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [39]    _interrupt
0x002B      [18]    _setWest
0x003D       [7]    _____DoICP
0x0044      [18]    _setSouth
0x0056      [87]    _firstPhase
0x00AD      [87]    _secondPhase
0x0104      [12]    ___CC2DW
0x0110      [87]    _thirdPhase
0x0167      [87]    _fourthPhase
0x01BE      [12]    _initialConfig
0x01CA       [7]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    INTE_bit
0x0020       [2]    _westCounter
0x0022       [2]    _southCounter
0x0024      [48]    _countDown
0x0054       [2]    ___DoICPAddr
0x0056       [1]    ___saveSTATUS
0x0057       [1]    ___savePCLATH
0x0058       [2]    FARG_setSouth_Red
0x0058       [2]    FARG_setWest_Red
0x005A       [2]    FARG_setWest_Yellow
0x005A       [2]    FARG_setSouth_Yellow
0x005C       [2]    FARG_setWest_Green
0x005C       [2]    FARG_setSouth_Green
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01D7       [2]    ?ICS_westCounter
0x01D9       [2]    ?ICS_southCounter
0x01DB      [48]    ?ICS_countDown
//** Label List: ** 
//----------------------------------------------
  L_firstPhase0
  L_firstPhase1
  L_firstPhase2
  L_firstPhase3
  L_secondPhase4
  L_secondPhase5
  L_secondPhase6
  L_secondPhase7
  L_thirdPhase8
  L_thirdPhase9
  L_thirdPhase10
  L_thirdPhase11
  L_fourthPhase12
  L_fourthPhase13
  L_fourthPhase14
  L_fourthPhase15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_main22
  L_main23
  L_end_initialConfig
  _initialConfig
  L_end_setWest
  _setWest
  L__setWest26
  L__setWest27
  L__setWest28
  L__setWest29
  L__setWest30
  L__setWest31
  L_end_setSouth
  _setSouth
  L__setSouth33
  L__setSouth34
  L__setSouth35
  L__setSouth36
  L__setSouth37
  L__setSouth38
  L_end_firstPhase
  _firstPhase
  L__firstPhase40
  L_end_secondPhase
  _secondPhase
  L__secondPhase42
  L_end_thirdPhase
  _thirdPhase
  L__thirdPhase44
  L_end_fourthPhase
  _fourthPhase
  L__fourthPhase46
  L_end_interrupt
  _interrupt
  L__interrupt48
  L_end_main
  _main
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_firstPhase0
  L_firstPhase1
  L_firstPhase2
  L_firstPhase3
  L_secondPhase4
  L_secondPhase5
  L_secondPhase6
  L_secondPhase7
  L_thirdPhase8
  L_thirdPhase9
  L_thirdPhase10
  L_thirdPhase11
  L_fourthPhase12
  L_fourthPhase13
  L_fourthPhase14
  L_fourthPhase15
  L_interrupt16
  L_interrupt17
  L_interrupt18
  L_interrupt19
  L_interrupt20
  L_interrupt21
  L_main22
  L_main23
  L_end_initialConfig
  _initialConfig
  L_end_setWest
  _setWest
  L__setWest26
  L__setWest27
  L__setWest28
  L__setWest29
  L__setWest30
  L__setWest31
  L_end_setSouth
  _setSouth
  L__setSouth33
  L__setSouth34
  L__setSouth35
  L__setSouth36
  L__setSouth37
  L__setSouth38
  L_end_firstPhase
  _firstPhase
  L__firstPhase40
  L_end_secondPhase
  _secondPhase
  L__secondPhase42
  L_end_thirdPhase
  _thirdPhase
  L__thirdPhase44
  L_end_fourthPhase
  _fourthPhase
  L__fourthPhase46
  L_end_interrupt
  _interrupt
  L__interrupt48
  L_end_main
  _main
